Search.setIndex({"alltitles": {"Acknowledgement": [[0, null]], "Additional Examples": [[1, null]], "Aggregation": [[9, "aggregation"]], "Applications": [[2, null]], "Chiller data library": [[3, "chiller-data-library"]], "Chillers": [[3, null]], "Code Documentation": [[4, null]], "Contributing": [[5, null]], "Curve generation": [[9, "curve-generation"]], "Documentation for Copper": [[11, null]], "Equipment": [[6, null]], "Future development": [[7, "future-development"]], "Installing Copper": [[10, "installing-copper"]], "Introduction": [[7, null]], "Issues": [[5, "issues"]], "LCT-based chiller performance curves": [[1, "lct-based-chiller-performance-curves"]], "License": [[8, null]], "Methodology": [[9, null]], "Pull requests": [[5, "pull-requests"]], "Quickstart Guide": [[10, null]], "Repeatability": [[1, "repeatability"]], "Table 1 - Summary of the Chiller Library": [[3, "id1"]], "Targeting two different rating standards": [[1, "targeting-two-different-rating-standards"]], "Using Copper as a package": [[10, "using-copper-as-a-package"]], "Using Copper\u2019s command line interface": [[10, "using-copper-s-command-line-interface"]], "What can Copper do?": [[7, "what-can-copper-do"]], "What equipment does Copper handle?": [[7, "what-equipment-does-copper-handle"]], "chiller.py": [[4, "chiller-py"]], "curves.py": [[4, "curves-py"]], "equipment.py": [[4, "equipment-py"]], "generator.py": [[4, "generator-py"]], "library.py": [[4, "library-py"]], "schema.py": [[4, "schema-py"]], "units.py": [[4, "units-py"]]}, "docnames": ["Acknowledgement", "Additional Examples", "Applications", "Chillers", "Code Documentation", "Contributing", "Equipment", "Introduction", "License", "Methodology", "Quickstart Guide", "index"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["Acknowledgement.rst", "Additional Examples.rst", "Applications.rst", "Chillers.rst", "Code Documentation.rst", "Contributing.rst", "Equipment.rst", "Introduction.rst", "License.rst", "Methodology.rst", "Quickstart Guide.rst", "index.rst"], "indexentries": {"calc_eff_ect() (copper.chiller.chiller method)": [[4, "copper.chiller.Chiller.calc_eff_ect", false]], "calc_fit() (copper.generator.generator method)": [[4, "copper.generator.Generator.calc_fit", false]], "calc_rated_eff() (copper.chiller.chiller method)": [[4, "copper.chiller.Chiller.calc_rated_eff", false]], "check_gradients() (copper.generator.generator method)": [[4, "copper.generator.Generator.check_gradients", false]], "check_vars_in_dictionary() (copper.curves.setsofcurves method)": [[4, "copper.curves.SetsofCurves.check_vars_in_dictionary", false]], "chiller (class in copper.chiller)": [[4, "copper.chiller.Chiller", false]], "compute_grad() (copper.curves.curve method)": [[4, "copper.curves.Curve.compute_grad", false]], "compute_grad() (copper.generator.generator method)": [[4, "copper.generator.Generator.compute_grad", false]], "cond_inlet_temp_residual() (copper.chiller.chiller method)": [[4, "copper.chiller.Chiller.cond_inlet_temp_residual", false]], "content() (copper.library.library method)": [[4, "copper.library.Library.content", false]], "conversion() (copper.units.units method)": [[4, "copper.units.Units.conversion", false]], "convert_coefficients_to_ip() (copper.curves.curve method)": [[4, "copper.curves.Curve.convert_coefficients_to_ip", false]], "convert_to_deg_c() (copper.chiller.chiller method)": [[4, "copper.chiller.Chiller.convert_to_deg_c", false]], "convert_to_deg_c() (copper.equipment.equipment method)": [[4, "copper.equipment.Equipment.convert_to_deg_c", false]], "copper.chiller": [[4, "module-copper.chiller", false]], "copper.curves": [[4, "module-copper.curves", false]], "copper.equipment": [[4, "module-copper.equipment", false]], "copper.generator": [[4, "module-copper.generator", false]], "copper.library": [[4, "module-copper.library", false]], "copper.schema": [[4, "module-copper.schema", false]], "copper.units": [[4, "module-copper.units", false]], "curve (class in copper.curves)": [[4, "copper.curves.Curve", false]], "determine_full_load_fitness() (copper.generator.generator method)": [[4, "copper.generator.Generator.determine_full_load_fitness", false]], "determine_normalization_fitness() (copper.generator.generator method)": [[4, "copper.generator.Generator.determine_normalization_fitness", false]], "determine_part_load_fitness() (copper.generator.generator method)": [[4, "copper.generator.Generator.determine_part_load_fitness", false]], "equipment (class in copper.equipment)": [[4, "copper.equipment.Equipment", false]], "evaluate() (copper.curves.curve method)": [[4, "copper.curves.Curve.evaluate", false]], "evolve_population() (copper.generator.generator method)": [[4, "copper.generator.Generator.evolve_population", false]], "export() (copper.curves.setofcurves method)": [[4, "copper.curves.SetofCurves.export", false]], "find_base_curves() (copper.library.library method)": [[4, "copper.library.Library.find_base_curves", false]], "find_equipment() (copper.library.library method)": [[4, "copper.library.Library.find_equipment", false]], "find_set_of_curves_from_lib() (copper.library.library method)": [[4, "copper.library.Library.find_set_of_curves_from_lib", false]], "fitness_scale_grading() (copper.generator.generator method)": [[4, "copper.generator.Generator.fitness_scale_grading", false]], "generate_population() (copper.generator.generator method)": [[4, "copper.generator.Generator.generate_population", false]], "generate_set_of_curves() (copper.chiller.chiller method)": [[4, "copper.chiller.Chiller.generate_set_of_curves", false]], "generate_set_of_curves() (copper.equipment.equipment method)": [[4, "copper.equipment.Equipment.generate_set_of_curves", false]], "generate_set_of_curves() (copper.generator.generator method)": [[4, "copper.generator.Generator.generate_set_of_curves", false]], "generator (class in copper.generator)": [[4, "copper.generator.Generator", false]], "get_aggregated_set_of_curves() (copper.curves.setsofcurves method)": [[4, "copper.curves.SetsofCurves.get_aggregated_set_of_curves", false]], "get_best_match() (copper.library.library method)": [[4, "copper.library.Library.get_best_match", false]], "get_chiller_curves() (copper.chiller.chiller method)": [[4, "copper.chiller.Chiller.get_chiller_curves", false]], "get_curve() (copper.library.library method)": [[4, "copper.library.Library.get_curve", false]], "get_curves_from_lib() (copper.chiller.chiller method)": [[4, "copper.chiller.Chiller.get_curves_from_lib", false]], "get_data_for_plotting() (copper.curves.setofcurves method)": [[4, "copper.curves.SetofCurves.get_data_for_plotting", false]], "get_eir_ref() (copper.chiller.chiller method)": [[4, "copper.chiller.Chiller.get_eir_ref", false]], "get_eir_ref() (copper.equipment.equipment method)": [[4, "copper.equipment.Equipment.get_eir_ref", false]], "get_lct() (copper.chiller.chiller method)": [[4, "copper.chiller.Chiller.get_lct", false]], "get_lib_and_filters() (copper.chiller.chiller method)": [[4, "copper.chiller.Chiller.get_lib_and_filters", false]], "get_out_reference() (copper.curves.curve method)": [[4, "copper.curves.Curve.get_out_reference", false]], "get_random() (copper.generator.generator method)": [[4, "copper.generator.Generator.get_random", false]], "get_ranges() (copper.chiller.chiller method)": [[4, "copper.chiller.Chiller.get_ranges", false]], "get_rated_temperatures() (copper.chiller.chiller method)": [[4, "copper.chiller.Chiller.get_rated_temperatures", false]], "get_ref_cond_flow_rate() (copper.chiller.chiller method)": [[4, "copper.chiller.Chiller.get_ref_cond_flow_rate", false]], "get_ref_values() (copper.chiller.chiller method)": [[4, "copper.chiller.Chiller.get_ref_values", false]], "get_ref_values() (copper.equipment.equipment method)": [[4, "copper.equipment.Equipment.get_ref_values", false]], "get_ref_vars_for_aggregation() (copper.chiller.chiller method)": [[4, "copper.chiller.Chiller.get_ref_vars_for_aggregation", false]], "get_seed_curves() (copper.chiller.chiller method)": [[4, "copper.chiller.Chiller.get_seed_curves", false]], "get_set_of_curves_by_name() (copper.library.library method)": [[4, "copper.library.Library.get_set_of_curves_by_name", false]], "get_unique_eqp_fields() (copper.library.library method)": [[4, "copper.library.Library.get_unique_eqp_fields", false]], "grade_population() (copper.generator.generator method)": [[4, "copper.generator.Generator.grade_population", false]], "identify_best_performer() (copper.generator.generator method)": [[4, "copper.generator.Generator.identify_best_performer", false]], "individual() (copper.generator.generator method)": [[4, "copper.generator.Generator.individual", false]], "is_target_met() (copper.generator.generator method)": [[4, "copper.generator.Generator.is_target_met", false]], "l2_norm() (copper.curves.setsofcurves method)": [[4, "copper.curves.SetsofCurves.l2_norm", false]], "library (class in copper.library)": [[4, "copper.library.Library", false]], "list_to_dict() (copper.curves.setofcurves method)": [[4, "copper.curves.SetofCurves.list_to_dict", false]], "load_obj() (copper.library.library method)": [[4, "copper.library.Library.load_obj", false]], "module": [[4, "module-copper.chiller", false], [4, "module-copper.curves", false], [4, "module-copper.equipment", false], [4, "module-copper.generator", false], [4, "module-copper.library", false], [4, "module-copper.schema", false], [4, "module-copper.units", false]], "nb_coeffs() (copper.curves.curve method)": [[4, "copper.curves.Curve.nb_coeffs", false]], "nearest_neighbor_sort() (copper.curves.setsofcurves method)": [[4, "copper.curves.SetsofCurves.nearest_neighbor_sort", false]], "normalize_vars() (copper.curves.setsofcurves method)": [[4, "copper.curves.SetsofCurves.normalize_vars", false]], "normalized() (copper.curves.curve method)": [[4, "copper.curves.Curve.normalized", false]], "perform_crossover() (copper.generator.generator method)": [[4, "copper.generator.Generator.perform_crossover", false]], "perform_mutation() (copper.generator.generator method)": [[4, "copper.generator.Generator.perform_mutation", false]], "plot() (copper.curves.setofcurves method)": [[4, "copper.curves.SetofCurves.plot", false]], "regression() (copper.curves.curve method)": [[4, "copper.curves.Curve.regression", false]], "remove_curve() (copper.curves.setofcurves method)": [[4, "copper.curves.SetofCurves.remove_curve", false]], "run_ga() (copper.generator.generator method)": [[4, "copper.generator.Generator.run_ga", false]], "scale_fitnesses() (copper.generator.generator method)": [[4, "copper.generator.Generator.scale_fitnesses", false]], "schema (class in copper.schema)": [[4, "copper.schema.Schema", false]], "setofcurves (class in copper.curves)": [[4, "copper.curves.SetofCurves", false]], "setsofcurves (class in copper.curves)": [[4, "copper.curves.SetsofCurves", false]], "softmax() (copper.curves.setsofcurves method)": [[4, "copper.curves.SetsofCurves.softmax", false]], "units (class in copper.units)": [[4, "copper.units.Units", false]], "validate() (copper.schema.schema method)": [[4, "copper.schema.Schema.validate", false]]}, "objects": {"copper": [[4, 0, 0, "-", "chiller"], [4, 0, 0, "-", "curves"], [4, 0, 0, "-", "equipment"], [4, 0, 0, "-", "generator"], [4, 0, 0, "-", "library"], [4, 0, 0, "-", "schema"], [4, 0, 0, "-", "units"]], "copper.chiller": [[4, 1, 1, "", "Chiller"]], "copper.chiller.Chiller": [[4, 2, 1, "", "calc_eff_ect"], [4, 2, 1, "", "calc_rated_eff"], [4, 2, 1, "", "cond_inlet_temp_residual"], [4, 2, 1, "", "convert_to_deg_c"], [4, 2, 1, "", "generate_set_of_curves"], [4, 2, 1, "", "get_chiller_curves"], [4, 2, 1, "", "get_curves_from_lib"], [4, 2, 1, "", "get_eir_ref"], [4, 2, 1, "", "get_lct"], [4, 2, 1, "", "get_lib_and_filters"], [4, 2, 1, "", "get_ranges"], [4, 2, 1, "", "get_rated_temperatures"], [4, 2, 1, "", "get_ref_cond_flow_rate"], [4, 2, 1, "", "get_ref_values"], [4, 2, 1, "", "get_ref_vars_for_aggregation"], [4, 2, 1, "", "get_seed_curves"]], "copper.curves": [[4, 1, 1, "", "Curve"], [4, 1, 1, "", "SetofCurves"], [4, 1, 1, "", "SetsofCurves"]], "copper.curves.Curve": [[4, 2, 1, "", "compute_grad"], [4, 2, 1, "", "convert_coefficients_to_ip"], [4, 2, 1, "", "evaluate"], [4, 2, 1, "", "get_out_reference"], [4, 2, 1, "", "nb_coeffs"], [4, 2, 1, "", "normalized"], [4, 2, 1, "", "regression"]], "copper.curves.SetofCurves": [[4, 2, 1, "", "export"], [4, 2, 1, "", "get_data_for_plotting"], [4, 2, 1, "", "list_to_dict"], [4, 2, 1, "", "plot"], [4, 2, 1, "", "remove_curve"]], "copper.curves.SetsofCurves": [[4, 2, 1, "", "check_vars_in_dictionary"], [4, 2, 1, "", "get_aggregated_set_of_curves"], [4, 2, 1, "", "l2_norm"], [4, 2, 1, "", "nearest_neighbor_sort"], [4, 2, 1, "", "normalize_vars"], [4, 2, 1, "", "softmax"]], "copper.equipment": [[4, 1, 1, "", "Equipment"]], "copper.equipment.Equipment": [[4, 2, 1, "", "convert_to_deg_c"], [4, 2, 1, "", "generate_set_of_curves"], [4, 2, 1, "", "get_eir_ref"], [4, 2, 1, "", "get_ref_values"]], "copper.generator": [[4, 1, 1, "", "Generator"]], "copper.generator.Generator": [[4, 2, 1, "", "calc_fit"], [4, 2, 1, "", "check_gradients"], [4, 2, 1, "", "compute_grad"], [4, 2, 1, "", "determine_full_load_fitness"], [4, 2, 1, "", "determine_normalization_fitness"], [4, 2, 1, "", "determine_part_load_fitness"], [4, 2, 1, "", "evolve_population"], [4, 2, 1, "", "fitness_scale_grading"], [4, 2, 1, "", "generate_population"], [4, 2, 1, "", "generate_set_of_curves"], [4, 2, 1, "", "get_random"], [4, 2, 1, "", "grade_population"], [4, 2, 1, "", "identify_best_performer"], [4, 2, 1, "", "individual"], [4, 2, 1, "", "is_target_met"], [4, 2, 1, "", "perform_crossover"], [4, 2, 1, "", "perform_mutation"], [4, 2, 1, "", "run_ga"], [4, 2, 1, "", "scale_fitnesses"]], "copper.library": [[4, 1, 1, "", "Library"]], "copper.library.Library": [[4, 2, 1, "", "content"], [4, 2, 1, "", "find_base_curves"], [4, 2, 1, "", "find_equipment"], [4, 2, 1, "", "find_set_of_curves_from_lib"], [4, 2, 1, "", "get_best_match"], [4, 2, 1, "", "get_curve"], [4, 2, 1, "", "get_set_of_curves_by_name"], [4, 2, 1, "", "get_unique_eqp_fields"], [4, 2, 1, "", "load_obj"]], "copper.schema": [[4, 1, 1, "", "Schema"]], "copper.schema.Schema": [[4, 2, 1, "", "validate"]], "copper.units": [[4, 1, 1, "", "Units"]], "copper.units.Units": [[4, 2, 1, "", "conversion"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method"}, "terms": {"": [0, 4, 5, 7, 9], "0": [1, 4, 10, 11], "00028259585409552777": 10, "00034135585158081606": 10, "0003860001861457355": 10, "00042164491939888525": 10, "0005571266682425939": 10, "000697957200141703": 10, "0009250222553367286": 10, "0025": 4, "004964252905445898": 10, "005": [1, 4, 10], "01": 1, "02997434988897927": 10, "05": [4, 10], "1": [1, 2, 4, 10], "10": 4, "100": [1, 4], "11": 3, "12": 3, "178": 1, "188": 1, "1e": 4, "2": [3, 4, 8, 10, 11], "2022": 8, "205": 7, "2127397264337366": 10, "22533063777829992": 10, "25": 10, "29": 10, "3": [3, 4, 9, 11], "300": [1, 4, 10], "34": 10, "38": 3, "4": 3, "439463472960298": 10, "444444444444443": 10, "4714919803545887": 10, "480": 10, "5": [4, 10], "52": 10, "520": [1, 10], "550": [1, 4, 10], "551": [1, 10], "5627140676879633": 10, "590": [1, 4, 10], "591": [1, 10], "6": [4, 10], "61": 10, "610": [1, 10], "611111111111114": 10, "650": 10, "666666666666667": 10, "7": 3, "731725051841458e": 10, "8": 10, "869": 1, "876": 1, "9": 3, "90": 2, "95": [3, 4], "9685131980886335": 10, "999": 10, "A": [8, 9, 10], "AND": 8, "AS": 8, "As": 6, "BE": 8, "BUT": 8, "BY": 8, "FOR": 8, "For": [1, 5, 7], "IF": 8, "IN": 8, "In": 10, "It": [0, 1, 3, 4, 11], "NO": 8, "NOT": 8, "OF": 8, "ON": 8, "OR": 8, "SUCH": 8, "THE": 8, "TO": 8, "The": [1, 2, 3, 4, 5, 9, 10], "Then": 10, "These": 9, "To": 5, "abov": 8, "accept": 4, "access": 5, "accur": 5, "acknowledg": 11, "across": 7, "action": 10, "activ": 0, "actual": 10, "ad": 4, "add": 5, "addendum": 2, "addit": [3, 4, 11], "address": 5, "adopt": 2, "advis": 8, "after": 4, "agg_onli": 4, "aggreg": [4, 11], "aggress": 4, "ahri": [1, 4, 10], "ahri_550": [1, 4], "ahri_551": 1, "aim": 5, "air": [3, 11], "algorithm": [4, 9, 11], "all": [3, 4, 8, 9, 10], "allow": 9, "along": 9, "alorithm": 4, "alpha": [4, 10], "also": [1, 7, 10], "alt": 4, "altern": 4, "an": [0, 1, 2, 4, 5, 9, 10, 11], "analysi": 2, "ani": [5, 8], "anoth": 4, "applic": [1, 4, 11], "appreci": 5, "approach": [2, 4, 5, 9], "appropri": 5, "ar": [1, 3, 4, 5, 7, 8, 9, 10, 11], "arg": 4, "argument": 10, "aris": 8, "around": 4, "arrai": 4, "ashra": [2, 7], "ask": 5, "assign": 4, "associ": [4, 9], "assum": 10, "attribut": [1, 4], "avail": 5, "averag": [4, 9], "avoid": 4, "ax": [4, 10], "axi": 10, "back": 5, "base": [2, 4, 5, 9], "base_curv": 4, "baselin": 2, "bd": 2, "becaus": [1, 7], "been": [2, 4], "behavior": 7, "being": [0, 4, 10], "below": [9, 10], "bem": 10, "best": [4, 9], "best_match": [1, 4], "better": [5, 9], "between": [3, 4, 9], "bi_quad": 10, "binari": 8, "black": 4, "boiler": 7, "bool": 4, "both": [1, 3, 10], "bound": 4, "bsd": 8, "bug": 5, "build": [1, 2, 3, 7, 11], "busi": 8, "c": [4, 8], "c_name": 4, "c_type": 4, "calc_eff_ect": 4, "calc_fit": 4, "calc_rated_eff": [4, 10], "calcul": 4, "call": [4, 10], "can": [1, 2, 3, 4, 5, 9, 10, 11], "cap": [4, 10], "cap_f_t": 4, "capac": [3, 4], "captur": 7, "caus": 8, "celsiu": 10, "centrifug": 3, "chang": 5, "charact": 4, "characterist": [1, 4, 7, 9, 10, 11], "check": 4, "check_gradi": 4, "check_vars_in_dictionari": 4, "chill": [2, 4, 10], "chiller": [2, 6, 7, 10], "chiller_curv": 4, "chlr": [1, 10], "chlr_perf_curv": 10, "choos": 9, "class": 4, "claus": 8, "clearli": 5, "cli": [4, 10], "close": 9, "closest": 4, "code": [2, 5, 8, 11], "coeff1": 10, "coeff2": 10, "coeff3": 10, "coeff4": 10, "coeff5": 10, "coeff6": 10, "coeffici": [2, 4], "color": [4, 10], "column": 4, "common": [3, 11], "compar": 2, "complianc": 2, "compliant": 7, "compress": 3, "compressor": 3, "compressor_spe": [1, 4, 10], "compressor_typ": [1, 4, 10], "comput": 4, "compute_grad": 4, "cond_inlet_temp_residu": 4, "condens": [1, 3, 4, 10], "condenser_typ": [1, 4, 10], "condit": [1, 4, 7, 8, 9, 10, 11], "consequenti": 8, "consid": 4, "constant": [1, 3, 10], "contain": [3, 4], "content": 4, "contract": [0, 8], "contribut": 11, "contributor": 8, "convers": 4, "convert": 4, "convert_coefficients_to_ip": 4, "convert_to_deg_c": 4, "cool": [1, 7, 10], "cop": 4, "copper": [0, 1, 2, 3, 4, 5, 6, 9], "copyright": 8, "correspond": [4, 10], "cp": [1, 10], "creat": [4, 7, 10], "crossov": 4, "cset": 4, "csv": 4, "current": [4, 5], "curv": [2, 3, 5, 7, 10, 11], "curve_typ": 4, "damag": 8, "darkolivegreen": 10, "data": [4, 5, 7, 8, 9], "datafram": 4, "dataset": 9, "deal": 4, "default": 10, "defin": [2, 4, 10], "definit": [1, 4, 9], "deg": 4, "degf": 4, "degre": [4, 10], "demonstr": 1, "depart": 0, "depend": [4, 7], "deriv": 2, "describ": [5, 7], "descript": 5, "design": [2, 7, 11], "detail": 5, "determin": 4, "determine_full_load_fit": 4, "determine_normalization_fit": 4, "determine_part_load_fit": 4, "develop": [0, 2, 5, 6], "df": 4, "dict": 4, "dictionari": 4, "differ": [2, 3, 4, 7, 9], "dimens": 4, "direct": [7, 8], "disclaim": 8, "distanc": 4, "distribut": 8, "do": 4, "document": [1, 3, 5, 8, 10], "doe": [0, 3, 11], "drag": 4, "driven": 5, "e": 4, "each": [3, 4, 5, 9], "ect": [1, 3, 4], "ect_lwt": [1, 4, 10], "eff_typ": [4, 10], "effici": [1, 4, 7, 9, 10, 11], "eir": [1, 4, 10], "eir_f_plr": 4, "eir_f_t": 4, "eir_ref": 4, "either": 10, "enabl": [2, 7], "energi": [0, 1, 2, 3, 4, 7, 11], "energyplu": [1, 3, 4, 10, 11], "enet": 4, "engin": [1, 3, 4, 7, 10, 11], "ensur": 1, "enter": [1, 3, 4, 10], "epsilon": 4, "eqp": [4, 10], "eqp_typ": 4, "equat": 1, "equip": [1, 9, 10, 11], "establish": 2, "evalu": [4, 9], "even": 8, "event": 8, "everi": 1, "evolv": 4, "evolve_popul": 4, "exampl": [2, 5, 10, 11], "except": 4, "exemplari": 8, "exist": [3, 4, 9, 11], "expans": 7, "expect": 4, "explain": 5, "export": [4, 7, 10], "export_format": [4, 10], "export_nam": [4, 10], "export_path": [4, 10], "express": 8, "extens": 4, "extremum": 4, "f": [1, 4, 10], "factor": 4, "fals": 4, "featur": 5, "field": 4, "fig": 10, "figsiz": 10, "figur": 10, "file": [4, 10], "filter": 4, "final": [4, 10], "find": [1, 4], "find_base_curv": 4, "find_equip": 4, "find_set_of_curves_from_lib": 4, "first": [4, 10], "fit": [4, 8, 9], "fitler": 4, "fitness_scale_grad": 4, "fix": 5, "float": 4, "flow": 4, "fmt": [4, 10], "follow": [1, 4, 8, 9, 10], "fork": 5, "form": 8, "format": [4, 5, 10], "found": [3, 9], "four": 9, "from": [4, 7, 9, 10], "full": [4, 7, 9, 10, 11], "full_eff": [1, 4, 10], "full_eff_alt": [1, 4], "full_eff_target": 1, "full_eff_target_alt": 1, "full_eff_unit": [1, 4, 10], "full_eff_unit_alt": [1, 4], "function": [3, 4, 10], "function_cal": 10, "fund": 0, "g": 4, "gener": [1, 2, 3, 5, 7, 10, 11], "generate_popul": 4, "generate_set_of_curv": [1, 4, 10], "genet": [4, 9, 11], "get": 4, "get_aggregated_set_of_curv": 4, "get_best_match": 4, "get_chiller_curv": 4, "get_curv": 4, "get_curves_from_lib": 4, "get_data_for_plot": 4, "get_eir_ref": 4, "get_lct": 4, "get_lib_and_filt": 4, "get_out_refer": 4, "get_random": 4, "get_rang": 4, "get_rated_temperatur": 4, "get_ref_cond_flow_r": 4, "get_ref_valu": 4, "get_ref_vars_for_aggreg": 4, "get_seed_curv": 4, "get_set_of_curves_by_nam": 4, "get_unique_eqp_field": 4, "github": 5, "given": [4, 7], "global": 2, "good": 8, "grade": 4, "grade_popul": 4, "gradient": 4, "greatli": 5, "guid": 11, "ha": [2, 4, 5], "handl": [3, 4], "have": 4, "heat": [7, 11], "help": 5, "helper": 4, "henc": 1, "herein": 3, "higher": [4, 9], "holder": 8, "home": 4, "how": [7, 9, 10], "howev": 8, "hvac": 2, "i": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11], "ident": 4, "identify_best_perform": 4, "idf": [4, 10], "imperi": 4, "implement": [3, 5], "impli": 8, "import": [1, 7, 10], "improv": 5, "incident": 8, "includ": [2, 4, 5, 8, 10, 11], "independ": [4, 9], "index": 4, "indic": 4, "indirect": 8, "individu": [4, 9], "indivud": 4, "infinit": 1, "inform": 10, "inial": 4, "initi": [4, 9], "input": [4, 10], "instanc": [4, 7], "int": 4, "integ": 4, "integr": [2, 10], "interest": 11, "interrupt": 8, "introduct": 11, "iplv": [1, 10], "is_target_met": 4, "iter": 4, "its": [7, 10], "json": [4, 10], "jurisdict": 2, "kei": 4, "kw": [1, 4, 10], "l2": 4, "l2_norm": 4, "label": 5, "laboratori": [0, 2, 8], "larg": 7, "lct": [3, 4], "lct_lwt": 1, "lead": 1, "leav": [1, 3, 4], "legibl": 5, "len": 10, "let": 10, "liabil": 8, "liabl": 8, "lib": 4, "lib_path": 4, "libari": 4, "librari": [5, 9], "licens": 11, "like": 10, "limit": 8, "linear": 4, "linearli": 4, "list": [4, 8], "list_to_dict": 4, "load": [3, 4, 7, 9, 10, 11], "load_obj": 4, "local": 4, "long": 5, "look": 10, "loss": 8, "lower": 4, "lwt": 4, "main": 3, "manipul": 4, "manual": [1, 3, 10], "map": 7, "match": [4, 7, 9, 11], "materi": 8, "matplotlib": [4, 10], "max_gen": 4, "max_restart": 4, "maximum": 4, "mean": [4, 5], "measur": 2, "median": [4, 9], "merchant": 8, "met": [4, 8], "method": [1, 4, 9, 10], "methodologi": 11, "metric": 11, "might": 11, "min_plr": 4, "min_unload": 4, "mind": 2, "misc_attr": 4, "model": [1, 2, 3, 4, 7, 10, 11], "modif": [4, 8], "modifi": [4, 9, 11], "modul": 4, "monoton": 4, "more": [4, 5, 6], "most": [1, 3, 7, 11], "multi": 7, "multipl": [1, 5, 7], "multitud": 1, "multivari": 4, "must": [4, 8, 10], "mutat": 4, "n": 4, "name": [4, 10], "nation": [0, 2, 8], "nb_coeff": 4, "ncol": 10, "nearest": [4, 9], "nearest_neighbor": [1, 4, 10], "nearest_neighbor_sort": 4, "necessari": [1, 10], "need": [4, 5], "neglig": 8, "neighbor": [4, 9], "new": [4, 5, 9], "new_unit": 4, "next": [4, 10], "nn_weighted_averag": 4, "none": 4, "norm": 4, "normal": [4, 9], "normalize_var": 4, "northwest": [0, 2, 8], "note": [4, 10], "notic": 8, "now": 10, "nrow": 10, "num_nearest_neighbor": 4, "number": [1, 3, 4, 9], "numpi": 4, "object": 4, "obtain": 9, "often": 7, "ol": 9, "one": [1, 3, 4, 5, 7], "onli": [4, 7, 9], "open": [0, 5], "oper": [3, 4, 7], "optim": 4, "other": [1, 3, 4, 8, 9], "otherwis": 8, "our": 4, "out": 8, "out_max": 10, "out_min": 10, "out_var": [4, 10], "output": [4, 9, 10], "output_report": 4, "pacif": [0, 2, 8], "packag": 7, "panda": 4, "param": 4, "paramet": 4, "parent": 4, "pars": 4, "part": [3, 4, 7, 9, 10, 11], "part_eff": [1, 4, 10], "part_eff_alt": [1, 4], "part_eff_flag": 4, "part_eff_ref_std": [1, 4], "part_eff_ref_std_alt": [1, 4], "part_eff_target": 1, "part_eff_target_alt": 1, "part_eff_unit": [1, 4, 10], "part_eff_unit_alt": [1, 4], "partial": 0, "particular": [4, 8], "pass": 10, "path": 4, "percentag": 4, "perform": [2, 3, 4, 5, 7, 9, 10, 11], "perform_crossov": 4, "perform_mut": 4, "permit": 8, "pip": 10, "plant": 2, "pleas": 5, "plot": [4, 7, 10], "plr": [1, 4, 10], "plt": 10, "point": 4, "polynomi": 7, "pop": 4, "pop_scal": 4, "pop_siz": 4, "popul": [4, 9], "possibl": [1, 8], "potenti": 4, "prevent": 4, "print": 10, "prior": 5, "probabl": 4, "process": 9, "procur": 8, "produc": 10, "profit": 8, "progress": 6, "project": 0, "prompt": 10, "propos": [4, 5], "provid": [3, 4, 5, 8, 9, 10], "publicli": 5, "purpos": 8, "pypi": 10, "pyplot": [4, 10], "python": 10, "quad": 10, "quickstart": 11, "quickstart_guide_chil": 10, "random": 4, "random_se": [1, 4, 10], "random_select": 4, "randomli": 4, "rang": [4, 7], "rare": 7, "rate": [4, 7, 9, 10], "rating_std": 4, "ratio": [2, 3, 4, 7, 10], "readi": [7, 10, 11], "reason": 7, "reciproc": 3, "redistribut": 8, "ref_cap": [1, 4, 10], "ref_cap_unit": [1, 4, 10], "ref_cond_fluid_flow": 10, "ref_ect": 10, "ref_evap_fluid_flow": 10, "ref_i": 10, "ref_lct": [4, 10], "ref_lwt": [4, 10], "ref_x": 10, "refer": [3, 4, 5, 9], "regress": [4, 7, 9], "relat": [4, 10], "relev": [4, 5], "remov": 4, "remove_curv": 4, "repeat": 9, "report": 5, "repres": 4, "reproduc": 8, "research": [5, 7, 11], "reserv": 8, "residu": 4, "respect": 4, "result": [1, 4, 7], "retain": [4, 8], "retriev": 4, "return": [4, 10], "review": 5, "right": 8, "rooftop": 7, "root": 4, "round": 10, "rtype": 4, "run": [1, 4, 10], "run_ga": 4, "runner": 4, "same": [1, 4, 9], "satisfactori": 9, "scale": 4, "scale_fit": 4, "score": [4, 9], "screw": [1, 3, 10], "script": 10, "scroll": [1, 3], "secant": 4, "second": 4, "seed": [4, 9], "select": [4, 9], "servic": 8, "set": [1, 2, 3, 4, 7, 9, 10, 11], "set_of_curv": [1, 4, 10], "setofcurv": [4, 10], "setsofcurv": 4, "sfac": 4, "shall": 8, "sharabl": 5, "should": [4, 5], "show": 4, "si": 10, "sign": 4, "sign_val": 4, "sim_engin": [1, 4, 10], "similar": 10, "simpl": 4, "simul": [1, 3, 4, 7, 10, 11], "singl": 4, "size": 4, "so": 5, "softmax": 4, "softwar": [1, 3, 8, 11], "solut": [1, 4], "some": 1, "sort": 4, "sourc": [0, 4, 8], "space": 10, "special": [4, 8], "specif": [4, 11], "specifi": [4, 9], "speed": [3, 10], "standard": [2, 4, 7, 10], "start": 10, "step": 9, "store": 9, "str": 4, "strict": 8, "string": 4, "stringent": 4, "structur": 4, "submit": 5, "subplot": 10, "subset": 9, "substitut": 8, "success": 4, "suffici": 5, "support": [1, 4, 6, 7], "system": [1, 2], "t": [1, 4, 10], "tabl": 5, "tag": 5, "target": [4, 9, 10], "target_attr": 4, "team": 5, "temperatur": [1, 3, 4, 10], "tend": 7, "term": 9, "test": 5, "thei": 4, "theori": 8, "thi": [4, 8, 10], "three": [4, 7], "threshold": 4, "through": [4, 5], "ti": 5, "time": 1, "titl": 5, "tol": [1, 4, 10], "toler": 4, "ton": [1, 4, 10], "tool": [1, 2, 3, 11], "tort": 8, "total": 2, "transpar": 4, "true": 4, "tspr": 2, "tupl": 4, "two": [2, 3, 4], "type": [3, 4, 6, 9, 10], "typic": 7, "u": 0, "under": 0, "underdetermin": 1, "uniqu": 4, "unit": [5, 10], "unless": 4, "until": 9, "us": [1, 2, 3, 4, 5, 7, 8, 9, 11], "user": [1, 2, 4, 5, 9], "val": 4, "valid": 4, "valu": [4, 10, 11], "vapor": 3, "var": [1, 4, 10], "vari": 3, "variabl": [3, 4, 9, 10], "variat": 7, "ventil": 11, "verbos": 4, "verif": 4, "verifi": 10, "version": 11, "via": 10, "vlue": 4, "wa": [0, 2, 7], "wai": [2, 8], "want": [4, 11], "warranti": 8, "water": [1, 2, 3, 4, 10], "we": [4, 10], "weight": [4, 9], "weighted_averag": 4, "welcom": 5, "when": 4, "where": 1, "wherea": 7, "whether": [4, 8], "which": [1, 4, 10], "whole": 4, "without": 8, "work": 4, "worst": 4, "would": 10, "x": [4, 10], "x1": 4, "x2": 4, "x_max": 10, "x_min": 10, "x_norm": 4, "y": 4, "y_max": 10, "y_min": 10, "y_norm": 4, "you": 11}, "titles": ["Acknowledgement", "Additional Examples", "Applications", "Chillers", "Code Documentation", "Contributing", "Equipment", "Introduction", "License", "Methodology", "Quickstart Guide", "Documentation for <strong>Copper</strong>"], "titleterms": {"": 10, "1": 3, "acknowledg": 0, "addit": 1, "aggreg": 9, "applic": 2, "base": 1, "can": 7, "chiller": [1, 3, 4], "code": 4, "command": 10, "contribut": 5, "copper": [7, 10, 11], "curv": [1, 4, 9], "data": 3, "develop": 7, "differ": 1, "do": 7, "document": [4, 11], "doe": 7, "equip": [4, 6, 7], "exampl": 1, "futur": 7, "gener": [4, 9], "guid": 10, "handl": 7, "instal": 10, "interfac": 10, "introduct": 7, "issu": 5, "lct": 1, "librari": [3, 4], "licens": 8, "line": 10, "methodologi": 9, "packag": 10, "perform": 1, "pull": 5, "py": 4, "quickstart": 10, "rate": 1, "repeat": 1, "request": 5, "schema": 4, "standard": 1, "summari": 3, "tabl": 3, "target": 1, "two": 1, "unit": 4, "us": 10, "what": 7}})